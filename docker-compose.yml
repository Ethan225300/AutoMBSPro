services:
  postgres:
    image: postgres:15
    container_name: mbspro-postgres
    environment:
      POSTGRES_USER: mbspro
      POSTGRES_PASSWORD: mbspro
      POSTGRES_DB: mbspro
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U mbspro -d mbspro"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  hapi:
    image: hapiproject/hapi:latest
    container_name: hapi
    ports:
      - "8080:8080"
    # 先去掉 healthcheck（镜像里通常没有 curl/wget，容易假阴性）
    environment:
      JAVA_OPTS: "-Xms512m -Xmx2g"
    restart: unless-stopped

  api:
    # 如果你要容器里跑 API，就写成 build 或 image；只在本地跑 pnpm dev 的话可以先注释掉这个 service
    image: node:20-alpine
    container_name: mbspro-api
    working_dir: /app
    volumes:
      - ./apps/api:/app
    command: sh -c "npm i -g pnpm && pnpm i && pnpm dev"
    environment:
      # 关键：容器内访问 hapi 要用服务名 hapi，而不是 localhost
      HAPI_BASE: http://hapi:8080/fhir
      PORT: 4000
      API_PREFIX: api
      FRONTEND_URL: http://localhost:3000
      # 其它 .env 里的变量也可以按需补上
    ports:
      - "4000:4000"
    depends_on:
      - hapi # 不再使用 condition: service_healthy，避免被健康检查卡住

volumes:
  postgres_data:
